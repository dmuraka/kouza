################## 整備中 #################

#install.packages(c("dplyr","ggplot2","sdmTMB","sf"))
library(dplyr)
library(ggplot2)
library(sdmTMB)
library(sf)

pcod   <-data.frame(pcod[pcod$year>=2009, c("year","X","Y","depth","density","present")])
pcod[1:10,]
####### logistic regression example
pcod_s <- st_as_sf(pcod,coords=c("X","Y"))
ggplot(pcod_s) + 
  geom_sf(aes(color = present)) +
  facet_wrap(~year) + 
  theme_minimal() +
  scale_color_gradient(low = "lightgrey", high = "red")

####### spatial logistic regression1
mesh <- make_mesh(pcod, xy_cols = c("X", "Y"), cutoff = 1)
plot(mesh,pch=1)

fit0 <- sdmTMB(
  present ~ as.factor( year ),
  data = pcod,
  mesh = mesh,
  family = binomial(link = "logit"),
  spatial = "on",
  reml=FALSE)
plot( pcod$depth, predict(fit0)$est)

####### spatial logistic regression2
fit1<- sdmTMB(
  present ~ s(depth) + as.factor( year ),
  data = pcod,
  mesh = mesh,
  family = binomial(link = "logit"),
  spatial = "on",
  reml=FALSE)

AIC(fit0)
AIC(fit1)

fit1
tidy(fit1, conf.int = TRUE)
tidy(fit1, effects = "ran_pars", conf.int = TRUE)

####### spatial prediction
qcs_grid2<-NULL
for(year in unique(pcod$year)){
  qcs_grid_sub<-data.frame(year,qcs_grid[,1:3])
  qcs_grid2   <-rbind(qcs_grid2,qcs_grid_sub)
}

qcs_grid2[1:2,]
p   <- predict(fit1, newdata = qcs_grid2, type="response")
p[1:3,]
p_s <- st_as_sf(p,coords=c("X","Y"))
ggplot(p_s) + 
  geom_sf(aes(color = est),pch=15,cex=0.5) +
  facet_wrap(~year) + 
  theme_minimal() +
  scale_color_gradient(low = "lightgrey", high = "red")

####### spatio-temporal logistic regression
fit2<- sdmTMB(
  present ~ s(depth) + as.factor( year ),
  data = pcod,
  mesh = mesh,
  family = binomial(link = "logit"),
  spatial = "on",
  time = "year",
  spatiotemporal = "ar1",
  reml=FALSE)

AIC(fit1)
AIC(fit2)

####### spatio-temporal prediction
p2   <- predict(fit2, newdata = qcs_grid2, type="response")
p2[1:3,]
p2_s <- st_as_sf(p2,coords=c("X","Y"))
ggplot(p2_s) + 
  geom_sf(aes(color = est),pch=15,cex=0.5) +
  facet_wrap(~year) + 
  theme_minimal() +
  scale_color_gradient(low = "lightgrey", high = "red")

####### uncertainty of the prediction
p2_sim     <- predict(fit2, newdata = qcs_grid2, type="response", nsim=500)
p2_s$est_sd<- apply(p2_sim, 1, sd)
ggplot(p2_s) + 
  geom_sf(aes(color = est_sd),pch=15,cex=0.5) +
  facet_wrap(~year) + 
  theme_minimal() +
  scale_color_gradient(low = "lightgrey", high = "red")

fit2
tidy(fit2, conf.int = TRUE)
tidy(fit2, effects = "ran_pars", conf.int = TRUE)

##################################################
################################################## Modeling considering physical barrier
# install.packages(c("remotes","sdmTMBextra","rnaturalearthhires","rnaturalearth"))
# remotes::install_github("pbs-assess/sdmTMBextra", dependencies = TRUE)
library(rnaturalearthhires)
library(rnaturalearth)
library(sdmTMB)
library(sdmTMBextra)

data(pcod)  # reload data
pcod      <-data.frame(pcod[pcod$year>=2009,])
canada_map<- ne_countries(scale = "large",country="canada")
pcod_map  <- st_crop(canada_map, 
                     c(xmin = -132, ymin = 50, 
                       xmax = -127, ymax = 53))

pcod_s<-st_as_sf(pcod,coords=c("lon","lat"), 
                 crs=st_crs(pcod_map))

ggplot(pcod_map) + geom_sf() +
  theme_minimal() + geom_sf(data = pcod_s, size = 1)

##########
mesh      <- make_mesh(pcod, xy_cols = c("lon", "lat"), cutoff=0.005)
bmesh     <- add_barrier_mesh(spde_obj = mesh, 
                              barrier_sf = pcod_map, 
                              range_fraction = 0.001)

fit <- sdmTMB(present ~ 1,data = pcod,mesh = bmesh,
              family = binomial(link = "logit"),spatial = "on")


mesh_water <- bmesh$mesh_sf[bmesh$normal_triangles , ]
mesh_land  <- bmesh$mesh_sf[bmesh$barrier_triangles, ]


ggplot(pcod_map) + geom_sf() +
  geom_sf(data = mesh_water, size = 0.8, colour = "blue") +
  geom_sf(data = mesh_land, size = 2, colour = "red")

fit <- sdmTMB(present ~ 1,data = pcod,mesh = bmesh,
              family = binomial(link = "logit"),spatial = "on")

#crs_utm9         <- 3156 # Pick a projection, here UTM9
#st_crs(pcod_map) <- 4326 # 'WGS84'; necessary on some installs
#pcod_map<- st_transform(pcod_map, crs_utm9)
qcs_grid[1:2,]
qcs_grid$X1000<- qcs_grid$X*1000# km to m
qcs_grid$Y1000<- qcs_grid$Y*1000# km to m
qcs_grid_s    <-st_as_sf(qcs_grid, coords=c("X1000","Y1000"),crs=3156)#UTM9
qcs_grid_s    <- st_transform(qcs_grid_s, 4326) # to WGS84
qcs_grid_coords<-st_coordinates(qcs_grid_s)
qcs_grid$lon  <-qcs_grid_coords[,1]
qcs_grid$lat  <-qcs_grid_coords[,2]

p   <- predict(fit, newdata = qcs_grid, type="response")
p_s <- st_as_sf(p,coords=c("lon","lat"))
ggplot(p_s) + 
  geom_sf(aes(color = est),pch=15) +
  theme_minimal() +
  scale_color_gradient(low = "lightgrey", high = "red")










